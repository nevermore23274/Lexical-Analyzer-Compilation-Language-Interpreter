Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | FUNCTION IDENTIFIER RETURNS type ';'
    4                | error ';'

    5 optional_variable: optional_variable variable
    6                  | error ';'
    7                  | %empty

    8 variable: IDENTIFIER ':' type IS statement_

    9 parameters: parameter optional_parameter

   10 optional_parameter: optional_parameter ',' parameter
   11                   | %empty

   12 parameter: IDENTIFIER ':' type

   13 type: INTEGER
   14     | REAL
   15     | BOOLEAN

   16 body: BEGIN_ statement_ END ';'

   17 statement_: statement ';'
   18           | error ';'

   19 statement: expression
   20          | REDUCE operator reductions ENDREDUCE
   21          | IF expression THEN statement_ ELSE statement_ ENDIF
   22          | CASE expression IS cases OTHERS ARROW statement_ ENDCASE

   23 cases: cases case
   24      | %empty

   25 case: WHEN INT_LITERAL ARROW statement_
   26     | error ';'

   27 operator: RELOP
   28         | ADDOP
   29         | MULOP
   30         | REMOP
   31         | EXPOP

   32 reductions: reductions statement_
   33           | %empty

   34 expression: expression OROP binary
   35           | binary

   36 binary: binary ANDOP relation
   37       | relation

   38 relation: relation RELOP term
   39         | term

   40 term: term ADDOP factor
   41     | factor

   42 factor: factor MULOP exponent
   43       | factor REMOP exponent
   44       | exponent

   45 exponent: unary
   46         | unary EXPOP exponent

   47 unary: NOTOP unary
   48      | primary

   49 primary: '(' expression ')'
   50        | INT_LITERAL
   51        | REAL_LITERAL
   52        | BOOL_LITERAL
   53        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 49
    ')' (41) 49
    ',' (44) 10
    ':' (58) 8 12
    ';' (59) 2 3 4 6 16 17 18 26
    error (256) 4 6 18 26
    IDENTIFIER <iden> (258) 2 3 8 12 53
    INT_LITERAL <value> (259) 25 50
    BOOL_LITERAL <value> (260) 52
    REAL_LITERAL <value> (261) 51
    EXPOP <oper> (262) 31 46
    ADDOP <oper> (263) 28 40
    MULOP <oper> (264) 29 42
    RELOP <oper> (265) 27 38
    REMOP <oper> (266) 30 43
    OROP <oper> (267) 34
    ANDOP <oper> (268) 36
    NOTOP <oper> (269) 47
    BEGIN_ (270) 16
    BOOLEAN (271) 15
    END (272) 16
    ENDREDUCE (273) 20
    FUNCTION (274) 2 3
    INTEGER (275) 13
    IS (276) 8 22
    REDUCE (277) 20
    RETURNS (278) 2 3
    ARROW (279) 22 25
    ELSE (280) 21
    CASE (281) 22
    ENDCASE (282) 22
    ENDIF (283) 21
    IF (284) 21
    OTHERS (285) 22
    REAL (286) 14
    THEN (287) 21
    WHEN (288) 25


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2 3 4
        on right: 1
    optional_variable (42)
        on left: 5 6 7
        on right: 1 5
    variable (43)
        on left: 8
        on right: 5
    parameters (44)
        on left: 9
        on right: 2
    optional_parameter (45)
        on left: 10 11
        on right: 9 10
    parameter (46)
        on left: 12
        on right: 9 10
    type (47)
        on left: 13 14 15
        on right: 2 3 8 12
    body <value> (48)
        on left: 16
        on right: 1
    statement_ <value> (49)
        on left: 17 18
        on right: 8 16 21 22 25 32
    statement <value> (50)
        on left: 19 20 21 22
        on right: 17
    cases <value> (51)
        on left: 23 24
        on right: 22 23
    case <value> (52)
        on left: 25 26
        on right: 23
    operator <oper> (53)
        on left: 27 28 29 30 31
        on right: 20
    reductions <value> (54)
        on left: 32 33
        on right: 20 32
    expression <value> (55)
        on left: 34 35
        on right: 19 21 22 34 49
    binary <value> (56)
        on left: 36 37
        on right: 34 35 36
    relation <value> (57)
        on left: 38 39
        on right: 36 37 38
    term <value> (58)
        on left: 40 41
        on right: 38 39 40
    factor <value> (59)
        on left: 42 43 44
        on right: 40 41 42 43
    exponent <value> (60)
        on left: 45 46
        on right: 42 43 44 46
    unary <value> (61)
        on left: 47 48
        on right: 45 46 47
    primary <value> (62)
        on left: 49 50 51 52 53
        on right: 48


State 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    4 function_header: error . ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION . IDENTIFIER parameters RETURNS type ';'
    3                | FUNCTION . IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function . $end

    $end  shift, and go to state 7


State 4

    1 function: function_header . optional_variable body

    error  shift, and go to state 8

    IDENTIFIER  reduce using rule 7 (optional_variable)
    BEGIN_      reduce using rule 7 (optional_variable)

    optional_variable  go to state 9


State 5

    4 function_header: error ';' .

    $default  reduce using rule 4 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER . parameters RETURNS type ';'
    3                | FUNCTION IDENTIFIER . RETURNS type ';'

    IDENTIFIER  shift, and go to state 10
    RETURNS     shift, and go to state 11

    parameters  go to state 12
    parameter   go to state 13


State 7

    0 $accept: function $end .

    $default  accept


State 8

    6 optional_variable: error . ';'

    ';'  shift, and go to state 14


State 9

    1 function: function_header optional_variable . body
    5 optional_variable: optional_variable . variable

    IDENTIFIER  shift, and go to state 15
    BEGIN_      shift, and go to state 16

    variable  go to state 17
    body      go to state 18


State 10

   12 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 19


State 11

    3 function_header: FUNCTION IDENTIFIER RETURNS . type ';'

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 23


State 12

    2 function_header: FUNCTION IDENTIFIER parameters . RETURNS type ';'

    RETURNS  shift, and go to state 24


State 13

    9 parameters: parameter . optional_parameter

    $default  reduce using rule 11 (optional_parameter)

    optional_parameter  go to state 25


State 14

    6 optional_variable: error ';' .

    $default  reduce using rule 6 (optional_variable)


State 15

    8 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 26


State 16

   16 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    REDUCE        shift, and go to state 33
    CASE          shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_  go to state 37
    statement   go to state 38
    expression  go to state 39
    binary      go to state 40
    relation    go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 17

    5 optional_variable: optional_variable variable .

    $default  reduce using rule 5 (optional_variable)


State 18

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 19

   12 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 47


State 20

   15 type: BOOLEAN .

    $default  reduce using rule 15 (type)


State 21

   13 type: INTEGER .

    $default  reduce using rule 13 (type)


State 22

   14 type: REAL .

    $default  reduce using rule 14 (type)


State 23

    3 function_header: FUNCTION IDENTIFIER RETURNS type . ';'

    ';'  shift, and go to state 48


State 24

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS . type ';'

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 49


State 25

    9 parameters: parameter optional_parameter .
   10 optional_parameter: optional_parameter . ',' parameter

    ','  shift, and go to state 50

    $default  reduce using rule 9 (parameters)


State 26

    8 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 51


State 27

   18 statement_: error . ';'

    ';'  shift, and go to state 52


State 28

   53 primary: IDENTIFIER .

    $default  reduce using rule 53 (primary)


State 29

   50 primary: INT_LITERAL .

    $default  reduce using rule 50 (primary)


State 30

   52 primary: BOOL_LITERAL .

    $default  reduce using rule 52 (primary)


State 31

   51 primary: REAL_LITERAL .

    $default  reduce using rule 51 (primary)


State 32

   47 unary: NOTOP . unary

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    unary    go to state 53
    primary  go to state 46


State 33

   20 statement: REDUCE . operator reductions ENDREDUCE

    EXPOP  shift, and go to state 54
    ADDOP  shift, and go to state 55
    MULOP  shift, and go to state 56
    RELOP  shift, and go to state 57
    REMOP  shift, and go to state 58

    operator  go to state 59


State 34

   22 statement: CASE . expression IS cases OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    expression  go to state 60
    binary      go to state 40
    relation    go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 35

   21 statement: IF . expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    expression  go to state 61
    binary      go to state 40
    relation    go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 36

   49 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    expression  go to state 62
    binary      go to state 40
    relation    go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 37

   16 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 63


State 38

   17 statement_: statement . ';'

    ';'  shift, and go to state 64


State 39

   19 statement: expression .
   34 expression: expression . OROP binary

    OROP  shift, and go to state 65

    $default  reduce using rule 19 (statement)


State 40

   35 expression: binary .
   36 binary: binary . ANDOP relation

    ANDOP  shift, and go to state 66

    $default  reduce using rule 35 (expression)


State 41

   37 binary: relation .
   38 relation: relation . RELOP term

    RELOP  shift, and go to state 67

    $default  reduce using rule 37 (binary)


State 42

   39 relation: term .
   40 term: term . ADDOP factor

    ADDOP  shift, and go to state 68

    $default  reduce using rule 39 (relation)


State 43

   41 term: factor .
   42 factor: factor . MULOP exponent
   43       | factor . REMOP exponent

    MULOP  shift, and go to state 69
    REMOP  shift, and go to state 70

    $default  reduce using rule 41 (term)


State 44

   44 factor: exponent .

    $default  reduce using rule 44 (factor)


State 45

   45 exponent: unary .
   46         | unary . EXPOP exponent

    EXPOP  shift, and go to state 71

    $default  reduce using rule 45 (exponent)


State 46

   48 unary: primary .

    $default  reduce using rule 48 (unary)


State 47

   12 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 12 (parameter)


State 48

    3 function_header: FUNCTION IDENTIFIER RETURNS type ';' .

    $default  reduce using rule 3 (function_header)


State 49

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type . ';'

    ';'  shift, and go to state 72


State 50

   10 optional_parameter: optional_parameter ',' . parameter

    IDENTIFIER  shift, and go to state 10

    parameter  go to state 73


State 51

    8 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 74


State 52

   18 statement_: error ';' .

    $default  reduce using rule 18 (statement_)


State 53

   47 unary: NOTOP unary .

    $default  reduce using rule 47 (unary)


State 54

   31 operator: EXPOP .

    $default  reduce using rule 31 (operator)


State 55

   28 operator: ADDOP .

    $default  reduce using rule 28 (operator)


State 56

   29 operator: MULOP .

    $default  reduce using rule 29 (operator)


State 57

   27 operator: RELOP .

    $default  reduce using rule 27 (operator)


State 58

   30 operator: REMOP .

    $default  reduce using rule 30 (operator)


State 59

   20 statement: REDUCE operator . reductions ENDREDUCE

    $default  reduce using rule 33 (reductions)

    reductions  go to state 75


State 60

   22 statement: CASE expression . IS cases OTHERS ARROW statement_ ENDCASE
   34 expression: expression . OROP binary

    OROP  shift, and go to state 65
    IS    shift, and go to state 76


State 61

   21 statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   34 expression: expression . OROP binary

    OROP  shift, and go to state 65
    THEN  shift, and go to state 77


State 62

   34 expression: expression . OROP binary
   49 primary: '(' expression . ')'

    OROP  shift, and go to state 65
    ')'   shift, and go to state 78


State 63

   16 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 79


State 64

   17 statement_: statement ';' .

    $default  reduce using rule 17 (statement_)


State 65

   34 expression: expression OROP . binary

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    binary    go to state 80
    relation  go to state 41
    term      go to state 42
    factor    go to state 43
    exponent  go to state 44
    unary     go to state 45
    primary   go to state 46


State 66

   36 binary: binary ANDOP . relation

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    relation  go to state 81
    term      go to state 42
    factor    go to state 43
    exponent  go to state 44
    unary     go to state 45
    primary   go to state 46


State 67

   38 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    term      go to state 82
    factor    go to state 43
    exponent  go to state 44
    unary     go to state 45
    primary   go to state 46


State 68

   40 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    factor    go to state 83
    exponent  go to state 44
    unary     go to state 45
    primary   go to state 46


State 69

   42 factor: factor MULOP . exponent

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    exponent  go to state 84
    unary     go to state 45
    primary   go to state 46


State 70

   43 factor: factor REMOP . exponent

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    exponent  go to state 85
    unary     go to state 45
    primary   go to state 46


State 71

   46 exponent: unary EXPOP . exponent

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    exponent  go to state 86
    unary     go to state 45
    primary   go to state 46


State 72

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 73

   10 optional_parameter: optional_parameter ',' parameter .

    $default  reduce using rule 10 (optional_parameter)


State 74

    8 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    REDUCE        shift, and go to state 33
    CASE          shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_  go to state 87
    statement   go to state 38
    expression  go to state 39
    binary      go to state 40
    relation    go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 75

   20 statement: REDUCE operator reductions . ENDREDUCE
   32 reductions: reductions . statement_

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    ENDREDUCE     shift, and go to state 88
    REDUCE        shift, and go to state 33
    CASE          shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_  go to state 89
    statement   go to state 38
    expression  go to state 39
    binary      go to state 40
    relation    go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 76

   22 statement: CASE expression IS . cases OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 24 (cases)

    cases  go to state 90


State 77

   21 statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    REDUCE        shift, and go to state 33
    CASE          shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_  go to state 91
    statement   go to state 38
    expression  go to state 39
    binary      go to state 40
    relation    go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 78

   49 primary: '(' expression ')' .

    $default  reduce using rule 49 (primary)


State 79

   16 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 16 (body)


State 80

   34 expression: expression OROP binary .
   36 binary: binary . ANDOP relation

    ANDOP  shift, and go to state 66

    $default  reduce using rule 34 (expression)


State 81

   36 binary: binary ANDOP relation .
   38 relation: relation . RELOP term

    RELOP  shift, and go to state 67

    $default  reduce using rule 36 (binary)


State 82

   38 relation: relation RELOP term .
   40 term: term . ADDOP factor

    ADDOP  shift, and go to state 68

    $default  reduce using rule 38 (relation)


State 83

   40 term: term ADDOP factor .
   42 factor: factor . MULOP exponent
   43       | factor . REMOP exponent

    MULOP  shift, and go to state 69
    REMOP  shift, and go to state 70

    $default  reduce using rule 40 (term)


State 84

   42 factor: factor MULOP exponent .

    $default  reduce using rule 42 (factor)


State 85

   43 factor: factor REMOP exponent .

    $default  reduce using rule 43 (factor)


State 86

   46 exponent: unary EXPOP exponent .

    $default  reduce using rule 46 (exponent)


State 87

    8 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 8 (variable)


State 88

   20 statement: REDUCE operator reductions ENDREDUCE .

    $default  reduce using rule 20 (statement)


State 89

   32 reductions: reductions statement_ .

    $default  reduce using rule 32 (reductions)


State 90

   22 statement: CASE expression IS cases . OTHERS ARROW statement_ ENDCASE
   23 cases: cases . case

    error   shift, and go to state 92
    OTHERS  shift, and go to state 93
    WHEN    shift, and go to state 94

    case  go to state 95


State 91

   21 statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 96


State 92

   26 case: error . ';'

    ';'  shift, and go to state 97


State 93

   22 statement: CASE expression IS cases OTHERS . ARROW statement_ ENDCASE

    ARROW  shift, and go to state 98


State 94

   25 case: WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 99


State 95

   23 cases: cases case .

    $default  reduce using rule 23 (cases)


State 96

   21 statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    REDUCE        shift, and go to state 33
    CASE          shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_  go to state 100
    statement   go to state 38
    expression  go to state 39
    binary      go to state 40
    relation    go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 97

   26 case: error ';' .

    $default  reduce using rule 26 (case)


State 98

   22 statement: CASE expression IS cases OTHERS ARROW . statement_ ENDCASE

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    REDUCE        shift, and go to state 33
    CASE          shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_  go to state 101
    statement   go to state 38
    expression  go to state 39
    binary      go to state 40
    relation    go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 99

   25 case: WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 102


State 100

   21 statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 103


State 101

   22 statement: CASE expression IS cases OTHERS ARROW statement_ . ENDCASE

    ENDCASE  shift, and go to state 104


State 102

   25 case: WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    REDUCE        shift, and go to state 33
    CASE          shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_  go to state 105
    statement   go to state 38
    expression  go to state 39
    binary      go to state 40
    relation    go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 103

   21 statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 21 (statement)


State 104

   22 statement: CASE expression IS cases OTHERS ARROW statement_ ENDCASE .

    $default  reduce using rule 22 (statement)


State 105

   25 case: WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 25 (case)
